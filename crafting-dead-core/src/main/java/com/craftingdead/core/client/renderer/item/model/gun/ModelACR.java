package com.craftingdead.core.client.renderer.item.model.gun;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.client.renderer.model.Model;
import net.minecraft.client.renderer.model.ModelRenderer;

public class ModelACR extends Model {
  // fields
  ModelRenderer Shape1;
  ModelRenderer Shape2;
  ModelRenderer Shape3;
  ModelRenderer Shape4;
  ModelRenderer Shape5;
  ModelRenderer Shape6;
  ModelRenderer Shape7;
  ModelRenderer Shape8;
  ModelRenderer Shape9;
  ModelRenderer Shape10;
  ModelRenderer Shape11;
  ModelRenderer Shape12;
  ModelRenderer Shape13;
  ModelRenderer Shape14;
  ModelRenderer Shape15;
  ModelRenderer Shape16;
  ModelRenderer Shape17;
  ModelRenderer Shape18;
  ModelRenderer Shape19;
  ModelRenderer Shape20;
  ModelRenderer Shape21;
  ModelRenderer Shape22;
  ModelRenderer Shape23;
  ModelRenderer Shape24;
  ModelRenderer Shape25;
  ModelRenderer Shape26;
  ModelRenderer Shape27;
  ModelRenderer Shape28;
  ModelRenderer Shape29;
  ModelRenderer Shape30;
  ModelRenderer Shape31;
  ModelRenderer Shape32;
  ModelRenderer Shape33;
  ModelRenderer Shape34;
  ModelRenderer Shape35;

  public ModelACR() {
    super(RenderType::getEntityCutoutNoCull);

    textureWidth = 256;
    textureHeight = 128;

    Shape1 = new ModelRenderer(this, 123, 65);
    Shape1.addCuboid(0F, 0F, 0F, 11, 4, 3);
    Shape1.setRotationPoint(-6F, -5F, 0F);
    Shape1.setTextureSize(256, 128);
    Shape1.mirror = true;
    setRotation(Shape1, 0F, 0F, 0F);
    Shape2 = new ModelRenderer(this, 141, 76);
    Shape2.addCuboid(0F, 0F, 0F, 4, 3, 3);
    Shape2.setRotationPoint(1F, -1.5F, 0F);
    Shape2.setTextureSize(256, 128);
    Shape2.mirror = true;
    setRotation(Shape2, 0F, 0F, -0.1487144F);
    Shape3 = new ModelRenderer(this, 124, 76);
    Shape3.addCuboid(0F, 0F, 0F, 3, 6, 3);
    Shape3.setRotationPoint(-6F, -1F, 0F);
    Shape3.setTextureSize(256, 128);
    Shape3.mirror = true;
    setRotation(Shape3, 0F, 0F, 0.2443461F);
    Shape4 = new ModelRenderer(this, 83, 85);
    Shape4.addCuboid(0.2666667F, 0.06666667F, 0F, 3, 2, 3);
    Shape4.setRotationPoint(-6F, -1.8F, 0F);
    Shape4.setTextureSize(256, 128);
    Shape4.mirror = true;
    setRotation(Shape4, 0F, 0F, 0.1858931F);
    Shape5 = new ModelRenderer(this, 99, 91);
    Shape5.addCuboid(0F, 0.3333333F, 0F, 4, 1, 3);
    Shape5.setRotationPoint(-4F, 0.5F, 0F);
    Shape5.setTextureSize(256, 128);
    Shape5.mirror = true;
    setRotation(Shape5, 0F, 0F, -0.1487144F);
    Shape6 = new ModelRenderer(this, 112, 52);
    Shape6.addCuboid(0F, 0F, 0F, 1, 4, 3);
    Shape6.setRotationPoint(-7F, -5F, 0F);
    Shape6.setTextureSize(256, 128);
    Shape6.mirror = true;
    setRotation(Shape6, 0F, 0F, 0F);
    Shape7 = new ModelRenderer(this, 124, 60);
    Shape7.addCuboid(0F, 0F, 0F, 11, 1, 2);
    Shape7.setRotationPoint(-6.466667F, -5.833333F, 0.5F);
    Shape7.setTextureSize(256, 128);
    Shape7.mirror = true;
    setRotation(Shape7, 0F, 0F, 0F);
    Shape8 = new ModelRenderer(this, 153, 66);
    Shape8.addCuboid(0F, 0F, 0F, 13, 3, 3);
    Shape8.setRotationPoint(4.5F, -5F, 0F);
    Shape8.setTextureSize(256, 128);
    Shape8.mirror = true;
    setRotation(Shape8, 0F, 0F, 0F);
    Shape9 = new ModelRenderer(this, 86, 68);
    Shape9.addCuboid(0F, 0F, 0F, 7, 3, 3);
    Shape9.setRotationPoint(-16.6F, -4.166667F, 0F);
    Shape9.setTextureSize(256, 128);
    Shape9.mirror = true;
    setRotation(Shape9, 0F, 0F, 0F);
    Shape10 = new ModelRenderer(this, 154, 60);
    Shape10.addCuboid(0F, 0F, 0F, 13, 1, 2);
    Shape10.setRotationPoint(4F, -5.8F, 0.5F);
    Shape10.setTextureSize(256, 128);
    Shape10.mirror = true;
    setRotation(Shape10, 0F, 0F, 0F);
    Shape11 = new ModelRenderer(this, 148, 84);
    Shape11.addCuboid(0.4666667F, 0F, 0F, 4, 3, 3);
    Shape11.setRotationPoint(1F, 1.5F, 0F);
    Shape11.setTextureSize(256, 128);
    Shape11.mirror = true;
    setRotation(Shape11, 0F, 0F, -0.1487195F);
    Shape12 = new ModelRenderer(this, 212, 71);
    Shape12.addCuboid(0F, 0F, 0F, 5, 1, 1);
    Shape12.setRotationPoint(17.5F, -3.7F, 1F);
    Shape12.setTextureSize(256, 128);
    Shape12.mirror = true;
    setRotation(Shape12, 0F, 0F, 0F);
    Shape13 = new ModelRenderer(this, 190, 67);
    Shape13.addCuboid(-2F, 0F, 0F, 4, 1, 1);
    Shape13.setRotationPoint(17.93333F, -4.833333F, 1F);
    Shape13.setTextureSize(256, 128);
    Shape13.mirror = true;
    setRotation(Shape13, 0F, 0F, 0F);
    Shape14 = new ModelRenderer(this, 181, 75);
    Shape14.addCuboid(-1F, 0.2F, 0F, 12, 2, 2);
    Shape14.setRotationPoint(5F, -3.5F, 0.5F);
    Shape14.setTextureSize(256, 128);
    Shape14.mirror = true;
    setRotation(Shape14, 0F, 0F, -0.0743572F);
    Shape15 = new ModelRenderer(this, 103, 78);
    Shape15.addCuboid(0F, 0F, 0F, 2, 2, 2);
    Shape15.setRotationPoint(0.2F, -1F, 0.5F);
    Shape15.setTextureSize(256, 128);
    Shape15.mirror = true;
    setRotation(Shape15, 0F, 0F, 0F);
    Shape16 = new ModelRenderer(this, 115, 86);
    Shape16.addCuboid(0.6F, 0F, 0F, 2, 1, 3);
    Shape16.setRotationPoint(-1F, 0.4666667F, 0F);
    Shape16.setTextureSize(256, 128);
    Shape16.mirror = true;
    setRotation(Shape16, 0F, 0F, -0.4089647F);
    Shape17 = new ModelRenderer(this, 105, 85);
    Shape17.addCuboid(0F, 0F, 0F, 1, 2, 1);
    Shape17.setRotationPoint(-3F, -1F, 1F);
    Shape17.setTextureSize(256, 128);
    Shape17.mirror = true;
    setRotation(Shape17, 0F, 0F, -0.7807508F);
    Shape18 = new ModelRenderer(this, 101, 62);
    Shape18.addCuboid(-1F, 0.2F, 0F, 8, 2, 2);
    Shape18.setRotationPoint(-13F, -5F, 0.5F);
    Shape18.setTextureSize(256, 128);
    Shape18.mirror = true;
    setRotation(Shape18, 0F, 0F, -0.1487144F);
    Shape19 = new ModelRenderer(this, 109, 67);
    Shape19.addCuboid(0F, 0F, 0F, 3, 3, 2);
    Shape19.setRotationPoint(-10F, -4.466667F, 0.5F);
    Shape19.setTextureSize(256, 128);
    Shape19.mirror = true;
    setRotation(Shape19, 0F, 0F, 0F);
    Shape20 = new ModelRenderer(this, 77, 65);
    Shape20.addCuboid(0F, 0F, 0F, 1, 6, 3);
    Shape20.setRotationPoint(-17.6F, -5F, 0F);
    Shape20.setTextureSize(256, 128);
    Shape20.mirror = true;
    setRotation(Shape20, 0F, 0F, 0F);
    Shape21 = new ModelRenderer(this, 84, 77);
    Shape21.addCuboid(0.2666667F, -0.2F, 0F, 3, 1, 3);
    Shape21.setRotationPoint(-16.6F, 0F, 0F);
    Shape21.setTextureSize(256, 128);
    Shape21.mirror = true;
    setRotation(Shape21, 0F, 0F, -0.7063936F);
    Shape22 = new ModelRenderer(this, 72, 77);
    Shape22.addCuboid(0F, 0F, 0F, 2, 1, 3);
    Shape22.setRotationPoint(-17.6F, -1.333333F, 0F);
    Shape22.setTextureSize(256, 128);
    Shape22.mirror = true;
    setRotation(Shape22, 0F, 0F, 0F);
    Shape23 = new ModelRenderer(this, 68, 60);
    Shape23.addCuboid(-0.4666667F, 0.1F, 0F, 1, 3, 3);
    Shape23.setRotationPoint(-18F, -5F, 0F);
    Shape23.setTextureSize(256, 128);
    Shape23.mirror = true;
    setRotation(Shape23, 0F, 0F, -0.2974289F);
    Shape24 = new ModelRenderer(this, 79, 47);
    Shape24.addCuboid(1F, 0F, 0F, 1, 6, 3);
    Shape24.setRotationPoint(-17.6F, -5F, 0F);
    Shape24.setTextureSize(256, 128);
    Shape24.mirror = true;
    setRotation(Shape24, 0F, 0F, 0F);
    Shape25 = new ModelRenderer(this, 88, 65);
    Shape25.addCuboid(0F, 0.8F, 0F, 4, 1, 1);
    Shape25.setRotationPoint(-11F, -5F, 0F);
    Shape25.setTextureSize(256, 128);
    Shape25.mirror = true;
    setRotation(Shape25, 0F, 0F, -0.1858931F);
    Shape26 = new ModelRenderer(this, 88, 65);
    Shape26.addCuboid(0F, 0.8F, 2F, 4, 1, 1);
    Shape26.setRotationPoint(-11F, -5F, 0F);
    Shape26.setTextureSize(256, 128);
    Shape26.mirror = true;
    setRotation(Shape26, 0F, 0F, -0.1858931F);
    Shape27 = new ModelRenderer(this, 115, 74);
    Shape27.addCuboid(0.2F, -0.2F, 0F, 1, 2, 3);
    Shape27.setRotationPoint(-7F, -1.4F, 0F);
    Shape27.setTextureSize(256, 128);
    Shape27.mirror = true;
    setRotation(Shape27, 0F, 0F, -0.3717861F);
    Shape28 = new ModelRenderer(this, 149, 93);
    Shape28.addCuboid(0.3F, 3F, 0F, 4, 3, 3);
    Shape28.setRotationPoint(1F, 1.5F, 0F);
    Shape28.setTextureSize(256, 128);
    Shape28.mirror = true;
    setRotation(Shape28, 0F, 0F, -0.2230767F);
    Shape29 = new ModelRenderer(this, 167, 75);
    Shape29.addCuboid(-1F, 1.2F, 0F, 3, 1, 2);
    Shape29.setRotationPoint(3.866667F, -2.5F, 0.5F);
    Shape29.setTextureSize(256, 128);
    Shape29.mirror = true;
    setRotation(Shape29, 0F, 0F, -0.7435722F);
    Shape30 = new ModelRenderer(this, 214, 61);
    Shape30.addCuboid(0F, 0F, 0F, 1, 1, 1);
    Shape30.setRotationPoint(20.3F, -3.8F, 1F);
    Shape30.setTextureSize(256, 128);
    Shape30.mirror = true;
    setRotation(Shape30, 0F, 0F, 0F);
    Shape31 = new ModelRenderer(this, 214, 66);
    Shape31.addCuboid(0F, 0F, 0F, 1, 1, 1);
    Shape31.setRotationPoint(20.33333F, -3.533333F, 1F);
    Shape31.setTextureSize(256, 128);
    Shape31.mirror = true;
    setRotation(Shape31, 0F, 0F, 0F);
    Shape32 = new ModelRenderer(this, 130, 86);
    Shape32.addCuboid(2.2F, 4F, 0F, 1, 2, 3);
    Shape32.setRotationPoint(-6F, -1F, 0F);
    Shape32.setTextureSize(256, 128);
    Shape32.mirror = true;
    setRotation(Shape32, 0F, 0F, 0.2443461F);
    Shape33 = new ModelRenderer(this, 94, 46);
    Shape33.addCuboid(0F, 0F, 0F, 1, 1, 2);
    Shape33.setRotationPoint(0F, -4.4F, -1.2F);
    Shape33.setTextureSize(256, 128);
    Shape33.mirror = true;
    setRotation(Shape33, -0.2974289F, 0F, 0F);
    Shape34 = new ModelRenderer(this, 80, 68);
    Shape34.addCuboid(0F, 0F, 0F, 1, 2, 1);
    Shape34.setRotationPoint(18F, -6.8F, 1F);
    Shape34.setTextureSize(256, 128);
    Shape34.mirror = true;
    setRotation(Shape34, 0F, 0F, 0F);
    Shape35 = new ModelRenderer(this, 80, 68);
    Shape35.addCuboid(0F, 0F, 0F, 1, 2, 1);
    Shape35.setRotationPoint(18F, -6.8F, 1F);
    Shape35.setTextureSize(256, 128);
    Shape35.mirror = true;
    setRotation(Shape35, 0F, 0F, 1.003822F);
  }

  @Override
  public void render(MatrixStack matrixStack, IVertexBuilder vertexBuilder, int packedLight,
      int packedOverlay, float red, float green, float blue, float alpha) {
    Shape1.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape2.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape3.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape4.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape5.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape6.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape7.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape8.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape9.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape10.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape12.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape13.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape14.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape15.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape16.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape17.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape18.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape19.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape20.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape21.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape22.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape23.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape24.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape25.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape26.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape27.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape29.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape30.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape31.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape32.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape33.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape34.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
    Shape35.render(matrixStack, vertexBuilder, packedLight, packedOverlay, red, green, blue, alpha);
  }


  private void setRotation(ModelRenderer model, float x, float y, float z) {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
}
